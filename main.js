(()=>{"use strict";const a="https://rickandmortyapi.com/api/character/",n=async n=>{const e=n?`${a}${n}`:a;try{const a=await fetch(e);return await a.json()}catch(a){console.error("Fetch Error",a)}},e=()=>location.hash.slice(1).toLocaleLowerCase().split("/")[1]||"/",t=()=>'\n        <div class="Error404">\n            <h2>Error 404</h2>\n        </div>\n    ',r={"/":async()=>`\n        <div class="Characters">\n            ${(await n()).results.map((a=>`\n                <article class="Characters-item">\n                    <a href="#/${a.id}/">\n                        <img src="${a.image}" alt="${a.name}">\n                        <h2>${a.name}</h2>\n                    </a>\n                </article>\n            `)).join("")}\n        </div>\n    `,"/:id":async()=>{const a=e(),t=await n(a);return`\n        <div class="Characters-inner">\n            <article class="Characters-card">\n                <img src="${t.image}" alt="${t.name}">\n                <h2>${t.name}</h2>\n            </article>\n            <article class="Characters-card">\n                <h3>Episodes: <span>${t.episode.length}</span> </h3>\n                <h3>Status: <span>${t.status}</span> </h3>\n                <h3>Species: <span>${t.species}</span> </h3>\n                <h3>Gender: <span>${t.gender}</span> </h3>\n                <h3>Origin: <span>${t.origin.name}</span> </h3>\n                <h3>Last Location: <span>${t.location.name}</span> </h3>\n            </article>\n        </div>\n    `},"/contact":"Contact"},s=async()=>{const a=document.getElementById("header"),n=document.getElementById("content"),s=document.getElementById("footer");a.innerHTML=await'\n        <div class="Header-main">\n            <div class="Header-logo">\n                <h1>\n                    <a href="#/">100tifi.co</a>\n                </h1>\n            </div>\n            <div class="Header-nav">\n                <a href="https://rickandmortyapi.com/" target="_blank">About</a>\n            </div>\n        </div>\n    ';let c=e(),i=await(a=>a.length<=3?"/"===a?a:"/:id":`/${a}`)(c),o=r[i]?r[i]:t;n.innerHTML=await o(),s.innerHTML=await'\n        <div class="Footer-main">\n            <p>\n                Desarrollado por <a href="https://maurobrandan.com/" target="_blank">Mauro Brandan</a> gracias a la API de <a href="https://rickandmortyapi.com/" target="_blank">Rick and Morty</a> y el curso de <a href="https://platzi.com/cursos/spa-javascript/" target="_blank">Platzi</a>\n            </p>\n        </div>\n    '},c=async()=>{try{const a=await fetch("https://rickandmortyapi.com/api/character/");return(await a.json()).info.count}catch(a){console.error("Fetch Error",a)}};let i=document.getElementById("search"),o=document.getElementById("search-button"),d=document.getElementById("search-p");c().then((a=>d.innerHTML=`Para buscar un personaje en especifico ingrese un ID. Puede ingresar desde 1 hasta ${a}.`)).catch((a=>console.error("Fetch Error",a))),o.addEventListener("click",(()=>async function(a){let n=await c();parseInt(a)>n||parseInt(a)<=0?alert(`Solo hay ${n} personajes, empezando por el 1`):window.location.hash=`/${a}`}(i.value))),window.addEventListener("load",s),window.addEventListener("hashchange",s)})();